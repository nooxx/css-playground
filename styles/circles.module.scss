@use "sass:list";
@use "sass:math";

$teal: #08A9AC;
$green: #A8D200;
$yellow-light: #FEF100;
$yellow: #FFC300;
$purple: #AB0292;
$red: #EC0409;
$pink: #ED028C;
$blue: #00ADEF;
$violet: #4A0090;

$colors: $violet $blue $pink $red $purple $yellow-light $yellow $green $teal $violet $blue $pink $red $purple $yellow-light $yellow $green $teal;

$circle-spacing: 60;

@mixin spirals($nb-circle) {
  .spiral {
    $index: 0;
    @for $i from $nb-circle through 1 {
      $color: list.nth($colors, $i);

      &:nth-of-type(#{$i}) {
        width: calc(80vh - #{$circle-spacing * ($i - 1)}px);
        max-width: calc(90% - #{$circle-spacing * ($i - 1)}px);

        @if ($index % 2 == 0) {
          .spiral__circle {
            animation: rotate-clock #{$index * 0.5 + 1}s linear infinite;
            animation-delay: #{$index * 0.25}s;
          }
        } @else {
          .spiral__circle {
            animation: rotate-anti-clock #{$index * 0.5 + 1}s linear infinite;
            animation-delay: #{$index * 0.25}s;
          }
        }

        .spiral__circle__segment {
          background-color: $color;
        }

        .spiral__dot {
          background-color: $color;

          $angle: 60deg;

          &:nth-of-type(1) {
            left: calc(((((90vh - #{$circle-spacing * ($i - 1)}px - 15px) / 2) * #{math.sin($angle)})) + ((90vh - #{$circle-spacing * ($i - 1)}px - 15px) / 2));
            top: calc((((90vh - #{$circle-spacing * ($i - 1)}px - 15px) / 2) * #{math.cos($angle)}))
          }

          &:nth-of-type(2) {
            left: calc(((90vh - #{$circle-spacing * ($i - 1)}px - 15px) / 2) - 8px);
            top: 0;
          }
        }
      }
      $index: $index + 0.25;
    }
  }
}

.circles {
  @include spirals(17);
}

.spiral {
  opacity: 0;
  position: absolute;
  aspect-ratio: 1 / 1;
  left: 50%;
  top: 50%;
  animation: fade-in 0.25s ease-in forwards;
  transform: translateX(-50%) translateY(-50%);

  &__circle {
    position: relative;
    width: 100%;
    height: 100%;
    background: transparent;
    border-radius: 50%;
    overflow: hidden;

    &__segment {
      position: absolute;
      top: 50%;
      left: 50%;
      width: 50%;
      height: 50%;
      transform-origin: 0 0;

      &:nth-of-type(1) {
        transform: rotate(0deg);
      }

      &:nth-of-type(2) {
        transform: rotate(89deg);
      }

      &:nth-of-type(3) {
        transform: rotate(179deg);
      }

      &:nth-of-type(4) {
        transform: rotate(-30deg);
      }
    }
  }

  &__inner {
    position: absolute;
    left: 50%;
    top: 50%;
    width: calc(100% - 20px);
    height: calc(100% - 20px);
    transform: translateX(-50%) translateY(-50%);
    background: black;
    border-radius: 50%;
  }
}

@keyframes fade-in {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes rotate-clock {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

@keyframes rotate-anti-clock {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(-360deg);
  }
}
